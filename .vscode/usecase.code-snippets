{
  "Create Usecase": {
    "scope": "javascript,typescript",
    "prefix": "usecase",
    "body": [
      "import { z } from 'zod';",
      "$1",
      "import { ValidateSchema } from '@/utils/decorators';",
      "import { IUsecase } from '@/utils/usecase';",
      "$2",
      "import { ${TM_FILENAME/(^.*?(?=-))(.*)/${1:/capitalize}${1:+EntitySchema}/g} } from '../entity/${TM_FILENAME/((?=-).*)//}';",
      "$2",
      "export const ${TM_FILENAME_BASE/([a-zA-Z]+)-?([a-zA-Z]*)-?([a-zA-Z]*)-?([a-zA-Z]*)?-?([a-zA-Z]*)?-?([a-zA-Z]*)?/${1:/capitalize}${2:/capitalize}${3:/capitalize}${4:/capitalize}${5:/capitalize}${6:/capitalize}/}InputSchema = ${TM_FILENAME/(^.*?(?=-))(.*)/${1:/capitalize}${1:+EntitySchema}/g}.pick({ id: true });",
      "$3",
      "export class ${TM_FILENAME_BASE/([a-zA-Z]+)-?([a-zA-Z]*)-?([a-zA-Z]*)-?([a-zA-Z]*)?-?([a-zA-Z]*)?-?([a-zA-Z]*)?/${1:/capitalize}${2:/capitalize}${3:/capitalize}${4:/capitalize}${5:/capitalize}${6:/capitalize}/}Usecase implements IUsecase {",
      "  @ValidateSchema(${TM_FILENAME_BASE/([a-zA-Z]+)-?([a-zA-Z]*)-?([a-zA-Z]*)-?([a-zA-Z]*)?-?([a-zA-Z]*)?-?([a-zA-Z]*)?/${1:/capitalize}${2:/capitalize}${3:/capitalize}${4:/capitalize}${5:/capitalize}${6:/capitalize}/}InputSchema)",
      "  async execute(input: ${TM_FILENAME_BASE/([a-zA-Z]+)-?([a-zA-Z]*)-?([a-zA-Z]*)-?([a-zA-Z]*)?-?([a-zA-Z]*)?-?([a-zA-Z]*)?/${1:/capitalize}${2:/capitalize}${3:/capitalize}${4:/capitalize}${5:/capitalize}${6:/capitalize}/}Input): Promise<${TM_FILENAME_BASE/([a-zA-Z]+)-?([a-zA-Z]*)-?([a-zA-Z]*)-?([a-zA-Z]*)?-?([a-zA-Z]*)?-?([a-zA-Z]*)?/${1:/capitalize}${2:/capitalize}${3:/capitalize}${4:/capitalize}${5:/capitalize}${6:/capitalize}/}Output> {",
      "    return input;",
      "  }",
      "}",
      "$5",
      "export type ${TM_FILENAME_BASE/([a-zA-Z]+)-?([a-zA-Z]*)-?([a-zA-Z]*)-?([a-zA-Z]*)?-?([a-zA-Z]*)?-?([a-zA-Z]*)?/${1:/capitalize}${2:/capitalize}${3:/capitalize}${4:/capitalize}${5:/capitalize}${6:/capitalize}/}Input = z.infer<typeof ${TM_FILENAME_BASE/([a-zA-Z]+)-?([a-zA-Z]*)-?([a-zA-Z]*)-?([a-zA-Z]*)?-?([a-zA-Z]*)?-?([a-zA-Z]*)?/${1:/capitalize}${2:/capitalize}${3:/capitalize}${4:/capitalize}${5:/capitalize}${6:/capitalize}/}InputSchema>;",
      "export type ${TM_FILENAME_BASE/([a-zA-Z]+)-?([a-zA-Z]*)-?([a-zA-Z]*)-?([a-zA-Z]*)?-?([a-zA-Z]*)?-?([a-zA-Z]*)?/${1:/capitalize}${2:/capitalize}${3:/capitalize}${4:/capitalize}${5:/capitalize}${6:/capitalize}/}Output = ${TM_FILENAME_BASE/([a-zA-Z]+)-?([a-zA-Z]*)-?([a-zA-Z]*)-?([a-zA-Z]*)?-?([a-zA-Z]*)?-?([a-zA-Z]*)?/${1:/capitalize}${2:/capitalize}${3:/capitalize}${4:/capitalize}${5:/capitalize}${6:/capitalize}/}Input;",
      "$4"
    ],
    "description": "Create usecase"
  }
}
