version: '3.1'

services:

  nestjs-monorepo-mongo:
    container_name: nestjs-monorepo-mongo
    image: mongo
    restart: always
    volumes: 
      - nestjs-monorepo-mongo:/data/db
      - .docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - mongo-network
    ports:
      - '27017:27017'
    env_file:
      - .env
  nestjs-monorepo-mongo-express:
    container_name: nestjs-monorepo-mongo-express
    image: mongo-express:0.49.0
    depends_on:
      - nestjs-monorepo-mongo
    restart: always
    ports:
      - 8081:8081
    env_file:
      - .env
    networks:
      - mongo-network
  postgres:
    container_name: nestjs-monorepo-postgres
    image: postgres
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - nestjs-monorepo-postgres:/data/postgres
      - .docker/postgres/create-database.sql:/docker-entrypoint-initdb.d/create-database.sql
    restart: always
    networks:
      - postgres-network
  redis:
    container_name: nestjs-monorepo-redis
    image: 'redis:alpine'
    volumes:
      - nestjs-monorepo-redis:/data
    ports:
      - 6379:6379
  pgadmin:
    container_name: nestjs-monorepo-pgadmin
    image: dpage/pgadmin4
    env_file:
      - .env
    ports:
      - '16543:80'
    depends_on:
      - postgres
    networks:
      - postgres-network
  
volumes:
  nestjs-monorepo-postgres:
  nestjs-monorepo-redis:
  nestjs-monorepo-mongo:
networks:
  mongo-network:
    driver: bridge
  postgres-network:
    driver: bridge